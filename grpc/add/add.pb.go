// Code generated by protoc-gen-go. DO NOT EDIT.
// source: add.proto

package add

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Data struct {
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	// Types that are valid to be assigned to Foo:
	//	*Data_Name
	//	*Data_Key
	Foo                  isData_Foo `protobuf_oneof:"foo"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_add_a829b59863e7006a, []int{0}
}
func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (dst *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(dst, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type isData_Foo interface {
	isData_Foo()
}

type Data_Name struct {
	Name string `protobuf:"bytes,4,opt,name=name,proto3,oneof"`
}

type Data_Key struct {
	Key string `protobuf:"bytes,5,opt,name=key,proto3,oneof"`
}

func (*Data_Name) isData_Foo() {}

func (*Data_Key) isData_Foo() {}

func (m *Data) GetFoo() isData_Foo {
	if m != nil {
		return m.Foo
	}
	return nil
}

func (m *Data) GetName() string {
	if x, ok := m.GetFoo().(*Data_Name); ok {
		return x.Name
	}
	return ""
}

func (m *Data) GetKey() string {
	if x, ok := m.GetFoo().(*Data_Key); ok {
		return x.Key
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Data) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Data_OneofMarshaler, _Data_OneofUnmarshaler, _Data_OneofSizer, []interface{}{
		(*Data_Name)(nil),
		(*Data_Key)(nil),
	}
}

func _Data_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Data)
	// foo
	switch x := m.Foo.(type) {
	case *Data_Name:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Name)
	case *Data_Key:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Key)
	case nil:
	default:
		return fmt.Errorf("Data.Foo has unexpected type %T", x)
	}
	return nil
}

func _Data_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Data)
	switch tag {
	case 4: // foo.name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Foo = &Data_Name{x}
		return true, err
	case 5: // foo.key
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Foo = &Data_Key{x}
		return true, err
	default:
		return false, nil
	}
}

func _Data_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Data)
	// foo
	switch x := m.Foo.(type) {
	case *Data_Name:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Name)))
		n += len(x.Name)
	case *Data_Key:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Key)))
		n += len(x.Key)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Data)(nil), "add.Data")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AddClient is the client API for Add service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AddClient interface {
	Add(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Data, error)
}

type addClient struct {
	cc *grpc.ClientConn
}

func NewAddClient(cc *grpc.ClientConn) AddClient {
	return &addClient{cc}
}

func (c *addClient) Add(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Data, error) {
	out := new(Data)
	err := c.cc.Invoke(ctx, "/add.Add/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddServer is the server API for Add service.
type AddServer interface {
	Add(context.Context, *Data) (*Data, error)
}

func RegisterAddServer(s *grpc.Server, srv AddServer) {
	s.RegisterService(&_Add_serviceDesc, srv)
}

func _Add_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/add.Add/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServer).Add(ctx, req.(*Data))
	}
	return interceptor(ctx, in, info, handler)
}

var _Add_serviceDesc = grpc.ServiceDesc{
	ServiceName: "add.Add",
	HandlerType: (*AddServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Add_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "add.proto",
}

func init() { proto.RegisterFile("add.proto", fileDescriptor_add_a829b59863e7006a) }

var fileDescriptor_add_a829b59863e7006a = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x4c, 0x49, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x4c, 0x49, 0x51, 0xf2, 0xe5, 0x62, 0x71, 0x49,
	0x2c, 0x49, 0x14, 0x12, 0xe1, 0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4,
	0x60, 0x0e, 0x82, 0x70, 0x84, 0x44, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x58, 0x14, 0x18,
	0x35, 0x38, 0x3d, 0x18, 0x82, 0xc0, 0x3c, 0x21, 0x21, 0x2e, 0xe6, 0xec, 0xd4, 0x4a, 0x09, 0x56,
	0xa8, 0x20, 0x88, 0xe3, 0xc4, 0xca, 0xc5, 0x9c, 0x96, 0x9f, 0x6f, 0xa4, 0xc2, 0xc5, 0xec, 0x98,
	0x92, 0x22, 0x24, 0x0b, 0xa1, 0x38, 0xf5, 0x40, 0xb6, 0x81, 0xcc, 0x97, 0x42, 0x30, 0x95, 0x18,
	0x92, 0xd8, 0xc0, 0x0e, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x49, 0xb3, 0xba, 0x8d,
	0x00, 0x00, 0x00,
}
